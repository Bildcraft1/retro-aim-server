// Code generated by mockery v2.40.1. DO NOT EDIT.

package foodgroup

import (
	context "context"

	state "github.com/mk6i/retro-aim-server/state"
	mock "github.com/stretchr/testify/mock"
)

// mockBuddyBroadcaster is an autogenerated mock type for the BuddyBroadcaster type
type mockBuddyBroadcaster struct {
	mock.Mock
}

type mockBuddyBroadcaster_Expecter struct {
	mock *mock.Mock
}

func (_m *mockBuddyBroadcaster) EXPECT() *mockBuddyBroadcaster_Expecter {
	return &mockBuddyBroadcaster_Expecter{mock: &_m.Mock}
}

// BroadcastBuddyArrived provides a mock function with given fields: ctx, sess
func (_m *mockBuddyBroadcaster) BroadcastBuddyArrived(ctx context.Context, sess *state.Session) error {
	ret := _m.Called(ctx, sess)

	if len(ret) == 0 {
		panic("no return value specified for BroadcastBuddyArrived")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *state.Session) error); ok {
		r0 = rf(ctx, sess)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockBuddyBroadcaster_BroadcastBuddyArrived_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BroadcastBuddyArrived'
type mockBuddyBroadcaster_BroadcastBuddyArrived_Call struct {
	*mock.Call
}

// BroadcastBuddyArrived is a helper method to define mock.On call
//   - ctx context.Context
//   - sess *state.Session
func (_e *mockBuddyBroadcaster_Expecter) BroadcastBuddyArrived(ctx interface{}, sess interface{}) *mockBuddyBroadcaster_BroadcastBuddyArrived_Call {
	return &mockBuddyBroadcaster_BroadcastBuddyArrived_Call{Call: _e.mock.On("BroadcastBuddyArrived", ctx, sess)}
}

func (_c *mockBuddyBroadcaster_BroadcastBuddyArrived_Call) Run(run func(ctx context.Context, sess *state.Session)) *mockBuddyBroadcaster_BroadcastBuddyArrived_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*state.Session))
	})
	return _c
}

func (_c *mockBuddyBroadcaster_BroadcastBuddyArrived_Call) Return(_a0 error) *mockBuddyBroadcaster_BroadcastBuddyArrived_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockBuddyBroadcaster_BroadcastBuddyArrived_Call) RunAndReturn(run func(context.Context, *state.Session) error) *mockBuddyBroadcaster_BroadcastBuddyArrived_Call {
	_c.Call.Return(run)
	return _c
}

// BroadcastBuddyDeparted provides a mock function with given fields: ctx, sess
func (_m *mockBuddyBroadcaster) BroadcastBuddyDeparted(ctx context.Context, sess *state.Session) error {
	ret := _m.Called(ctx, sess)

	if len(ret) == 0 {
		panic("no return value specified for BroadcastBuddyDeparted")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *state.Session) error); ok {
		r0 = rf(ctx, sess)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockBuddyBroadcaster_BroadcastBuddyDeparted_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BroadcastBuddyDeparted'
type mockBuddyBroadcaster_BroadcastBuddyDeparted_Call struct {
	*mock.Call
}

// BroadcastBuddyDeparted is a helper method to define mock.On call
//   - ctx context.Context
//   - sess *state.Session
func (_e *mockBuddyBroadcaster_Expecter) BroadcastBuddyDeparted(ctx interface{}, sess interface{}) *mockBuddyBroadcaster_BroadcastBuddyDeparted_Call {
	return &mockBuddyBroadcaster_BroadcastBuddyDeparted_Call{Call: _e.mock.On("BroadcastBuddyDeparted", ctx, sess)}
}

func (_c *mockBuddyBroadcaster_BroadcastBuddyDeparted_Call) Run(run func(ctx context.Context, sess *state.Session)) *mockBuddyBroadcaster_BroadcastBuddyDeparted_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*state.Session))
	})
	return _c
}

func (_c *mockBuddyBroadcaster_BroadcastBuddyDeparted_Call) Return(_a0 error) *mockBuddyBroadcaster_BroadcastBuddyDeparted_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockBuddyBroadcaster_BroadcastBuddyDeparted_Call) RunAndReturn(run func(context.Context, *state.Session) error) *mockBuddyBroadcaster_BroadcastBuddyDeparted_Call {
	_c.Call.Return(run)
	return _c
}

// UnicastBuddyArrived provides a mock function with given fields: ctx, from, to
func (_m *mockBuddyBroadcaster) UnicastBuddyArrived(ctx context.Context, from *state.Session, to *state.Session) error {
	ret := _m.Called(ctx, from, to)

	if len(ret) == 0 {
		panic("no return value specified for UnicastBuddyArrived")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *state.Session, *state.Session) error); ok {
		r0 = rf(ctx, from, to)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockBuddyBroadcaster_UnicastBuddyArrived_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UnicastBuddyArrived'
type mockBuddyBroadcaster_UnicastBuddyArrived_Call struct {
	*mock.Call
}

// UnicastBuddyArrived is a helper method to define mock.On call
//   - ctx context.Context
//   - from *state.Session
//   - to *state.Session
func (_e *mockBuddyBroadcaster_Expecter) UnicastBuddyArrived(ctx interface{}, from interface{}, to interface{}) *mockBuddyBroadcaster_UnicastBuddyArrived_Call {
	return &mockBuddyBroadcaster_UnicastBuddyArrived_Call{Call: _e.mock.On("UnicastBuddyArrived", ctx, from, to)}
}

func (_c *mockBuddyBroadcaster_UnicastBuddyArrived_Call) Run(run func(ctx context.Context, from *state.Session, to *state.Session)) *mockBuddyBroadcaster_UnicastBuddyArrived_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*state.Session), args[2].(*state.Session))
	})
	return _c
}

func (_c *mockBuddyBroadcaster_UnicastBuddyArrived_Call) Return(_a0 error) *mockBuddyBroadcaster_UnicastBuddyArrived_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockBuddyBroadcaster_UnicastBuddyArrived_Call) RunAndReturn(run func(context.Context, *state.Session, *state.Session) error) *mockBuddyBroadcaster_UnicastBuddyArrived_Call {
	_c.Call.Return(run)
	return _c
}

// UnicastBuddyDeparted provides a mock function with given fields: ctx, from, to
func (_m *mockBuddyBroadcaster) UnicastBuddyDeparted(ctx context.Context, from *state.Session, to *state.Session) {
	_m.Called(ctx, from, to)
}

// mockBuddyBroadcaster_UnicastBuddyDeparted_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UnicastBuddyDeparted'
type mockBuddyBroadcaster_UnicastBuddyDeparted_Call struct {
	*mock.Call
}

// UnicastBuddyDeparted is a helper method to define mock.On call
//   - ctx context.Context
//   - from *state.Session
//   - to *state.Session
func (_e *mockBuddyBroadcaster_Expecter) UnicastBuddyDeparted(ctx interface{}, from interface{}, to interface{}) *mockBuddyBroadcaster_UnicastBuddyDeparted_Call {
	return &mockBuddyBroadcaster_UnicastBuddyDeparted_Call{Call: _e.mock.On("UnicastBuddyDeparted", ctx, from, to)}
}

func (_c *mockBuddyBroadcaster_UnicastBuddyDeparted_Call) Run(run func(ctx context.Context, from *state.Session, to *state.Session)) *mockBuddyBroadcaster_UnicastBuddyDeparted_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*state.Session), args[2].(*state.Session))
	})
	return _c
}

func (_c *mockBuddyBroadcaster_UnicastBuddyDeparted_Call) Return() *mockBuddyBroadcaster_UnicastBuddyDeparted_Call {
	_c.Call.Return()
	return _c
}

func (_c *mockBuddyBroadcaster_UnicastBuddyDeparted_Call) RunAndReturn(run func(context.Context, *state.Session, *state.Session)) *mockBuddyBroadcaster_UnicastBuddyDeparted_Call {
	_c.Call.Return(run)
	return _c
}

// newMockBuddyBroadcaster creates a new instance of mockBuddyBroadcaster. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockBuddyBroadcaster(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockBuddyBroadcaster {
	mock := &mockBuddyBroadcaster{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
